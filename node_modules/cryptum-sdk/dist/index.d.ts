export = CryptumSDK;
/**
 * @typedef {object} Config
 * @property {'testnet'|'mainnet'} environment
 * @property {string} apiKey
 */
declare class CryptumSDK {
    /**
     *
     * @param {Config} config
     */
    constructor(config: Config);
    config: Config;
    /**
     * Method to get an controller to create, get and delete webhooks
     *
     * @returns an WebhooksController instance class to manipulate
     */
    get webhook(): import("./src/features/webhooks/controller").WebhooksController;
    getWebhooksController(): import("./src/features/webhooks/controller").WebhooksController;
    /**
     * Method to get a controller to manipulate wallets
     *
     * @returns WalletController instance
     */
    get wallet(): import("./src/features/wallet/controller").WalletController;
    getWalletController(): import("./src/features/wallet/controller").WalletController;
    /**
     * Method to get a controller to manipulate transactions
     *
     * @returns TransactionController instance
     */
    get transaction(): import("./src/features/transaction/controller").TransactionController;
    getTransactionController(): import("./src/features/transaction/controller").TransactionController;
    get staking(): import("./src/features/staking/controller").StakingController;
    /**
     * Method to get a controller to manipulate transactions
     * @param {Object} args
     * @param {Protocol} args.protocol
     * @returns TransactionController instance
     */
    getStakingController({ protocol }: {
        protocol: Protocol;
    }): import("./src/features/staking/controller/celo");
    /**
     * Method to get a controller to manipulate prices
     *
     * @returns PricesController instance
     */
    get prices(): import("./src/features/prices/controller").PricesController;
    getPricesController(): import("./src/features/prices/controller").PricesController;
    /**
     * Method to get a controller to manipulate swap
     *
     * @returns SwapController instance
     */
    get swap(): import("./src/features/swap/controller").SwapController;
    getSwapController(): import("./src/features/swap/controller").SwapController;
    get token(): import("./src/features/token/controller").TokenController;
    getTokenController(): import("./src/features/token/controller").TokenController;
    get nft(): import("./src/features/nft/controller").NftController;
    getNftController(): import("./src/features/nft/controller").NftController;
    get contract(): import("./src/features/contract/controller").ContractController;
    getContractController(): import("./src/features/contract/controller").ContractController;
    get lootBox(): import("./src/features/lootBox/controller").LootBoxController;
    getLootBoxController(): import("./src/features/lootBox/controller").LootBoxController;
    get kms(): import("./src/features/kms/controller").KmsController;
    getKmsController(): import("./src/features/kms/controller").KmsController;
}
declare namespace CryptumSDK {
    export { Config };
}
type Config = {
    environment: 'testnet' | 'mainnet';
    apiKey: string;
};
import { Protocol } from "./src/services/blockchain/constants";
