export const MAX_RETRIES: 48;
export const AUCTION_SCHEMA: Map<typeof SetAuthorityArgs, {
    kind: string;
    fields: string[][];
}>;
export class AmountRange {
    constructor(args: any);
    amount: any;
    length: any;
}
export const SAFETY_DEPOSIT_BOX_SCHEMA: Map<typeof SafetyDepositConfig, {
    kind: string;
    fields: ((string | (typeof AmountRange)[])[] | (string | {
        kind: string;
        type: typeof ParticipationConfigV2;
    })[] | (string | {
        kind: string;
        type: typeof ParticipationStateV2;
    })[])[];
} | {
    kind: string;
    fields: (string | typeof SafetyDepositConfig)[][];
}>;
export class SafetyDepositConfig {
    constructor(args: any);
}
export class SetAuthorityArgs {
    instruction: number;
}
export class SetWhitelistedCreatorArgs {
    constructor(args: any);
    instruction: number;
    activated: any;
}
export class ValidateSafetyDepositBoxV2Args {
    constructor(safetyDeposit: any);
    instruction: number;
    safetyDepositConfig: any;
}
export const WHITELIST_CREATOR_SCHEMA: Map<typeof WhitelistedCreator, {
    kind: string;
    fields: string[][];
}>;
export class ParticipationConfigV2 {
    constructor(args: any);
    winnerConstraint: number;
    nonWinningConstraint: number;
    fixedPrice: BN;
}
export class EmptyPaymentAccountArgs {
    constructor(args: any);
    instruction: number;
    winningConfigIndex: any;
    winningConfigItemIndex: any;
    creatorIndex: any;
}
export const EMPTY_PAYMENT_ACCOUNT_SCHEMA: Map<typeof EmptyPaymentAccountArgs, {
    kind: string;
    fields: (string | {
        kind: string;
        type: string;
    })[][];
}>;
export function toPublicKey(key: any): solanaWeb3.PublicKey;
export function metaplexConfirm(network: any, tx: any): Promise<void>;
export class CreateAssociatedTokenAccount extends solanaWeb3.Transaction {
    constructor(options: any, params: any);
}
export class MintTo extends solanaWeb3.Transaction {
    constructor(options: any, params: any);
}
export class CreateMint extends solanaWeb3.Transaction {
    constructor(options: any, params: any);
}
declare class ParticipationStateV2 {
    constructor(args: any);
    collectedToAcceptPayment: BN;
}
declare class WhitelistedCreator {
    constructor(args: any);
    key: number;
    address: any;
    activated: any;
}
import BN = require("bn.js");
import solanaWeb3 = require("@solana/web3.js");
export {};
