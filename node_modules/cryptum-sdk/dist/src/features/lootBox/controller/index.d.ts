export function getLootBoxControllerInstance(config: any): Controller;
export { Controller as LootBoxController };
declare class Controller extends Interface {
    /**
     * Deploy lootBox factory
     * @param {import('../entity').DeployLootBoxFactoryInput} input
     * @returns {Promise<import('../../transaction/entity').TransactionResponse>}
     */
    deploy(input: import('../entity').DeployLootBoxFactoryInput): Promise<import('../../transaction/entity').TransactionResponse>;
    /**
     * Open lootBox
     * @param {import('../entity').OpenLootBoxInput} input
     * @returns {Promise<import('../../transaction/entity').TransactionResponse>}
     */
    openLootBox(input: import('../entity').OpenLootBoxInput): Promise<import('../../transaction/entity').TransactionResponse>;
    /**
   * Create lootBox
   * @param {import('../entity').CreateLootBoxInput} input
   * @returns {Promise<import('../../transaction/entity').TransactionResponse>}
   */
    createLootBox(input: import('../entity').CreateLootBoxInput): Promise<import('../../transaction/entity').TransactionResponse>;
    /**
   * Get lootBox content
   * @param {import('../entity').GetLootBoxContentInput} input
   * @returns {Promise<import('../../transaction/entity').TransactionResponse>}
   */
    getLootBoxContent(input: import('../entity').GetLootBoxContentInput): Promise<import('../../transaction/entity').TransactionResponse>;
    /**
     * Approve Prizes
     * @param {import('../entity').ApproveContent} input
     * @returns {Promise<import('../../transaction/entity').TransactionResponse>}
     */
    approve(input: import('../entity').ApproveContent): Promise<import('../../transaction/entity').TransactionResponse>;
}
import Interface = require("./interface");
